pipeline:
  identifier: Build_stevencoccia_gosample_1732115809793
  name: Build gosample
  orgIdentifier: default
  projectIdentifier: Test
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1732115636001
        repoName: stevencoccia/gosample
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: gobuild
                  name: go_build
                  spec:
                    command: go build
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestcoverage
                  name: go_test_coverage
                  spec:
                    command: go test -coverprofile=coverage.out ./...
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestreport
                  name: go_test_report
                  spec:
                    command: "export GOBIN=/home/harness/go/bin\n\t\texport PATH=/home/harness/go/bin:$PATH\n\t\techo $PATH\n\t\tgo install github.com/jstemmer/go-junit-report/v2@latest\n\t\tgo test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml"
                    reports:
                      spec:
                        paths:
                          - /harness/report.xml
                      type: JUnit
                  timeout: ""
                  type: Run
              - step:
                  identifier: dockerbuild
                  name: docker_build
                  spec:
                    connectorRef: <+input>
                    repo: stevecoccia/myapp
                    tags:
                      - test_v1
                    caching: true
                  timeout: ""
                  type: BuildAndPushDockerRegistry
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: harnessguestbook
          environment:
            environmentRef: harnessdevenv
            deployToAll: false
            infrastructureDefinitions:
              - identifier: harnessk8sinfra
          execution:
            steps:
              - stepGroup:
                  name: Kanary
                  identifier: Kanary
                  steps:
                    - step:
                        type: K8sCanaryDeploy
                        name: K8sCanaryDeploy_1
                        identifier: K8sCanaryDeploy_1
                        spec:
                          skipDryRun: false
                          instanceSelection:
                            type: Count
                            spec:
                              count: 1
                        timeout: 10m
                    - step:
                        type: K8sCanaryDelete
                        name: K8sCanaryDelete_1
                        identifier: K8sCanaryDelete_1
                        spec:
                          delegateSelectors:
                            - kubernetes-delegate
                        timeout: 10m
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
